---
// src/components/Header.astro
import { useState } from 'react'; // Astro can support React components for interactivity; otherwise use vanilla JS in <script>
---

<header class="flex items-center justify-between px-6 py-3 border-b border-gray-200 dark:border-gray-700">
  <div class="flex items-center space-x-2">
    <img src="/logo.svg" alt="Logo" class="h-8 w-8" />
    <h1 class="text-xl font-bold tracking-tight">Wallify</h1>
  </div>

  <div class="flex-1 max-w-lg mx-6">
    <div class="relative text-gray-600 dark:text-gray-300">
      <input
        type="search"
        id="search"
        placeholder="Search wallpapers..."
        class="block w-full rounded-md border border-gray-300 bg-white py-2 pl-10 pr-3 text-sm shadow-sm placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500 dark:border-gray-600 dark:bg-gray-800 dark:placeholder-gray-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400"
        onInput="filterWallpapers(event)"
        autocomplete="off"
      />
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="absolute left-3 top-2.5 h-5 w-5 text-gray-400 dark:text-gray-500"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 103.5 10.5a7.5 7.5 0 0013.15 6.15z" />
      </svg>
    </div>
  </div>

  <div class="flex items-center space-x-4">
    <button
      id="dark-toggle"
      aria-label="Toggle dark mode"
      class="rounded-md p-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
      onClick="toggleDarkMode()"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M12 3v1m0 16v1m8.66-9H21m-16 0H3m15.36 6.36l.7.7M6.34 6.34l.7.7m12.02 0l-.7.7M6.34 17.66l-.7.7M12 7a5 5 0 000 10a5 5 0 000-10z"
        />
      </svg>
    </button>

    <a
      href="https://github.com/your-repo"
      target="_blank"
      rel="noopener noreferrer"
      class="inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 dark:hover:bg-gray-800"
    >
      GitHub
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="ml-2 h-5 w-5"
        fill="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          d="M12 0a12 12 0 00-3.79 23.4c.6.11.82-.26.82-.58v-2.2c-3.34.73-4.04-1.61-4.04-1.61a3.17 3.17 0 00-1.33-1.76c-1.09-.75.08-.73.08-.73a2.5 2.5 0 011.82 1.23 2.53 2.53 0 003.44.98 2.53 2.53 0 01.75-1.58c-2.67-.3-5.47-1.34-5.47-5.95a4.65 4.65 0 011.24-3.22 4.3 4.3 0 01.12-3.18s1-.32 3.3 1.23a11.3 11.3 0 016 0c2.3-1.55 3.3-1.23 3.3-1.23a4.3 4.3 0 01.12 3.18 4.65 4.65 0 011.24 3.22c0 4.62-2.81 5.65-5.49 5.95a2.83 2.83 0 01.8 2.2v3.27c0 .32.22.7.82.58A12 12 0 0012 0z"
        />
      </svg>
    </a>
  </div>

  <script is:inline>
    // Dark mode toggle logic
    function toggleDarkMode() {
      const htmlEl = document.documentElement;
      if (htmlEl.classList.contains('dark')) {
        htmlEl.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      } else {
        htmlEl.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      }
    }

    // Load saved theme on page load
    if (
      localStorage.getItem('theme') === 'dark' ||
      (!('theme' in localStorage) &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark');
    }

    // Placeholder for wallpaper search filtering
    function filterWallpapers(event) {
      const query = event.target.value.toLowerCase();
      // Implement filtering logic to show/hide wallpapers based on `query`
      // Example: document.querySelectorAll('.wallpaper-card').forEach(...)
    }
  </script>
</header>

